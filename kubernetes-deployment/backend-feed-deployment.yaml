apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-feed
spec:
  selector:
    matchLabels:
      run: backend-feed
  replicas: 2
  template:
    metadata:
      labels:
        run: backend-feed
    spec:
      containers:
        - name: backend-feed
          image: docker.io/e596aaaa7545/udagram-api-feed:v1
          env:
            - name: POSTGRES_USERNAME
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_HOST
              value: "database-1.cfhfiutlkgvd.us-east-1.rds.amazonaws.com"
            - name: POSTGRES_DB
              value: "database_dev"
            - name: AWS_BUCKET
              value: "arn:aws:s3:::udagram-best-bucket-ever-hieunt114"
            - name: AWS_REGION
              value: "us-east-1"
            - name: JWT_SECRET
              value: "jwt_secret"
            - name: URL
              value: "http://localhost:8080"
            - name: POSTGRES_USERNAME
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_HOST
              value: "database-1.cfhfiutlkgvd.us-east-1.rds.amazonaws.com"
            - name: POSTGRES_DB
              value: "database_dev"
            - name: AWS_BUCKET
              value: "arn:aws:s3:::udagram-best-bucket-ever-hieunt114"
            - name: AWS_REGION
              value: "us-east-1"
            - name: JWT_SECRET
              value: "jwt_secret"
            - name: URL
              value: "http://localhost:8080"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m

---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: backend-feed
  name: backend-feed
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    service: backend-feed
